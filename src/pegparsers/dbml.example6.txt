// source: https://raw.githubusercontent.com/webreinvent/vaahcms/cfacb66204da409192e7ae7b7b7152937d5a74f7/Database/Dbml/vaahcms.dbml
// source: https://raw.githubusercontent.com/opennetadmin/ona/f356082cfdbb4ddbacd630df5a65cb8a786c1e89/docs/ona-schema.dbml
// source: https://raw.githubusercontent.com/mu-box/core/684babfcabb8f84c5a133b04ae173b72824831c8/docs/database.dbml

Table "failed_jobs" {
  "id" bigint [pk, increment]
  "uuid" varchar(255) [not null]
  "connection" text [not null]
  "queue" text [not null]
  "payload" longtext [not null]
  "exception" longtext [not null]
  "failed_at" timestamp [not null, default: `current_timestamp()`]
  "constraint" failed_jobs_uuid_unique
}

Table "job_batches" {
  "id" varchar(255) [pk, not null]
  "name" varchar(255) [not null]
  "total_jobs" int [not null]
  "pending_jobs" int [not null]
  "failed_jobs" int [not null]
  "failed_job_ids" text [not null]
  "options" mediumtext
  "cancelled_at" int
  "created_at" int [not null]
  "finished_at" int
}

Table "jobs" {
  "id" bigint [pk, increment]
  "queue" varchar(255) [not null]
  "payload" longtext [not null]
  "attempts" tinyint [not null]
  "reserved_at" int
  "available_at" int [not null]
  "created_at" int [not null]

Indexes {
  queue [name: "jobs_queue_index"]
}
}

Table "migrations" {
  "id" int [pk, increment]
  "migration" varchar(255) [not null]
  "batch" int [not null]
}

Table "vh_migrations" {
  "id" int [pk, increment]
  "migrationable_id" int
  "migrationable_type" varchar(255)
  "migration_id" int
  "batch" int
  "created_at" timestamp
  "updated_at" timestamp
}

Table "vh_registrations" {
  "id" bigint [pk, increment]
  "uuid" char(36)
  "email" varchar(150)
  "username" varchar(150)
  "password" varchar(255)
  "display_name" varchar(50)  [note: "If filled this will be visible as user's name."]
  "title" varchar(200)
  "designation" varchar(200)
  "first_name" varchar(150)
  "middle_name" varchar(255)
  "last_name" varchar(150)
  "gender" varchar(15)
  "country_calling_code" int
  "phone" bigint
  "bio" mediumtext
  "timezone" varchar(255)
  "alternate_email" varchar(255)
  "avatar_url" varchar(255)
  "birth" date
  "country" varchar(255)
  "country_code" varchar(255)
  "status" varchar(255)
  "activation_code" varchar(255)
  "activation_code_sent_at" datetime
  "activated_at" datetime
  "activated_ip" varchar(45)
  "invited_by" bigint
  "invited_at" datetime
  "invited_for_key" varchar(255)
  "invited_for_value" varchar(255)
  "belong_type" varchar(255)
  "belong_id" bigint
  "vh_user_id" bigint
  "user_created_at" datetime
  "meta" text
  "created_ip" varchar(45)
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  activation_code [name: "vh_registrations_activation_code_index"]
  (belong_type, belong_id) [name: "vh_registrations_belong_type_belong_id_index"]
  (created_at, updated_at, deleted_at) [name: "vh_registrations_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_registrations_created_by_index"]
  deleted_by [name: "vh_registrations_deleted_by_index"]
  designation [name: "vh_registrations_designation_index"]
  display_name [name: "vh_registrations_display_name_index"]
  email [name: "vh_registrations_email_index"]
  first_name [name: "vh_registrations_first_name_index"]
  invited_by [name: "vh_registrations_invited_by_index"]
  invited_for_key [name: "vh_registrations_invited_for_key_index"]
  last_name [name: "vh_registrations_last_name_index"]
  middle_name [name: "vh_registrations_middle_name_index"]
  phone [name: "vh_registrations_phone_index"]
  status [name: "vh_registrations_status_index"]
  updated_by [name: "vh_registrations_updated_by_index"]
  username [name: "vh_registrations_username_index"]
  uuid [name: "vh_registrations_uuid_index"]
  vh_user_id [name: "vh_registrations_vh_user_id_index"]
}
}

Table "vh_settings" {
  "id" bigint [pk, increment]
  "settingable_id" int
  "settingable_type" varchar(255)
  "category" varchar(255)
  "label" varchar(255)
  "excerpt" varchar(255)
  "type" varchar(255)
  "key" varchar(255)
  "value" text
  "meta" longtext
  "created_at" timestamp
  "updated_at" timestamp
  "constraint" meta

Indexes {
  category [name: "vh_settings_category_index"]
  (created_at, updated_at) [name: "vh_settings_created_at_updated_at_index"]
  key [name: "vh_settings_key_index"]
  settingable_id [name: "vh_settings_settingable_id_index"]
  settingable_type [name: "vh_settings_settingable_type_index"]
  type [name: "vh_settings_type_index"]
}
}

Table "vh_theme_blocks" {
  "id" bigint [pk, increment]
  "vh_theme_id" int
  "name" varchar(150)
  "slug" varchar(150)
  "created_at" timestamp
  "updated_at" timestamp

Indexes {
  (created_at, updated_at) [name: "vh_theme_blocks_created_at_updated_at_index"]
  slug [name: "vh_theme_blocks_slug_index"]
  vh_theme_id [name: "vh_theme_blocks_vh_theme_id_index"]
}
}

Table "vh_theme_locations" {
  "id" bigint [pk, increment]
  "vh_theme_id" int
  "type" varchar(255)
  "name" varchar(150)
  "slug" varchar(150)
  "excerpt" varchar(255)
  "created_at" timestamp
  "updated_at" timestamp

Indexes {
  (created_at, updated_at) [name: "vh_theme_locations_created_at_updated_at_index"]
  slug [name: "vh_theme_locations_slug_index"]
  type [name: "vh_theme_locations_type_index"]
  vh_theme_id [name: "vh_theme_locations_vh_theme_id_index"]
}
}

Table "vh_theme_template_fields" {
  "id" bigint [pk, increment]
  "uuid" char(36)
  "vh_theme_id" int
  "vh_template_id" int
  "sort" int
  "name" varchar(255)
  "slug" varchar(255)
  "type" varchar(255)
  "content" varchar(255)
  "excerpt" varchar(255)
  "is_searchable" tinyint(1)
  "is_repeatable" tinyint(1)
  "meta" longtext
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp
  "constraint" meta

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_theme_template_fields_created_at_updated_at_deleted_at_index"]
  is_repeatable [name: "vh_theme_template_fields_is_repeatable_index"]
  is_searchable [name: "vh_theme_template_fields_is_searchable_index"]
  slug [name: "vh_theme_template_fields_slug_index"]
  sort [name: "vh_theme_template_fields_sort_index"]
  type [name: "vh_theme_template_fields_type_index"]
  vh_template_id [name: "vh_theme_template_fields_vh_template_id_index"]
  vh_theme_id [name: "vh_theme_template_fields_vh_theme_id_index"]
}
}

Table "vh_theme_templates" {
  "id" bigint [pk, increment]
  "vh_theme_id" int
  "type" varchar(255)
  "name" varchar(150)
  "slug" varchar(150)
  "file_path" varchar(255)
  "excerpt" varchar(255)
  "created_at" timestamp
  "updated_at" timestamp

Indexes {
  (created_at, updated_at) [name: "vh_theme_templates_created_at_updated_at_index"]
  file_path [name: "vh_theme_templates_file_path_index"]
  slug [name: "vh_theme_templates_slug_index"]
  type [name: "vh_theme_templates_type_index"]
  vh_theme_id [name: "vh_theme_templates_vh_theme_id_index"]
}
}

Table "vh_users" {
  "id" bigint [pk, increment]
  "uuid" char(36)
  "email" varchar(150)
  "username" varchar(150)
  "password" varchar(255)
  "login_otp" varchar(255)
  "display_name" varchar(50)
  "title" varchar(200)
  "designation" varchar(200)
  "first_name" varchar(150)
  "middle_name" varchar(255)
  "last_name" varchar(150)
  "gender" varchar(15)
  "country_calling_code" int
  "phone" bigint
  "bio" mediumtext
  "website" varchar(255)
  "timezone" varchar(255)
  "alternate_email" varchar(255)
  "avatar_url" varchar(255)
  "birth" date
  "country" varchar(255)
  "country_code" varchar(255)
  "last_login_at" datetime
  "last_login_ip" varchar(45)
  "remember_token" varchar(255)
  "api_token" varchar(255)
  "api_token_used_at" datetime
  "api_token_used_ip" varchar(45)
  "is_active" tinyint(1)
  "activated_at" datetime
  "status" varchar(255)
  "affiliate_code" varchar(255)
  "affiliate_code_used_at" datetime
  "reset_password_code" varchar(255)
  "reset_password_code_sent_at" datetime
  "reset_password_code_used_at" datetime
  "registration_id" bigint
  "meta" text
  "created_ip" varchar(45)
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  api_token [name: "vh_users_api_token_index"]
  (created_at, updated_at, deleted_at) [name: "vh_users_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_users_created_by_index"]
  deleted_by [name: "vh_users_deleted_by_index"]
  designation [name: "vh_users_designation_index"]
  email [name: "vh_users_email_index"]
  first_name [name: "vh_users_first_name_index"]
  is_active [name: "vh_users_is_active_index"]
  last_name [name: "vh_users_last_name_index"]
  login_otp [name: "vh_users_login_otp_index"]
  middle_name [name: "vh_users_middle_name_index"]
  password [name: "vh_users_password_index"]
  phone [name: "vh_users_phone_index"]
  registration_id [name: "vh_users_registration_id_index"]
  status [name: "vh_users_status_index"]
  updated_by [name: "vh_users_updated_by_index"]
  username [name: "vh_users_username_index"]
  uuid [name: "vh_users_uuid_index"]
}
}

Table "vh_lang_categories" {
  "id" bigint [pk, increment]
  "name" varchar(150)
  "slug" varchar(150)
  "count_strings" int [default: 0]
  "count_strings_filled" int [default: 0]
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_lang_categories_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_lang_categories_created_by_index"]
  deleted_by [name: "vh_lang_categories_deleted_by_index"]
  slug [name: "vh_lang_categories_slug_index"]
  updated_by [name: "vh_lang_categories_updated_by_index"]
}
}

Table "vh_lang_languages" {
  "id" bigint [pk, increment]
  "name" varchar(150)
  "locale_code_iso_639" varchar(255)
  "right_to_left" tinyint(1) [default: 0]
  "default" tinyint(1) [default: 0]
  "count_strings" int [default: 0]
  "count_strings_filled" int [default: 0]
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_lang_languages_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_lang_languages_created_by_index"]
  deleted_by [name: "vh_lang_languages_deleted_by_index"]
  locale_code_iso_639 [name: "vh_lang_languages_locale_code_iso_639_index"]
  updated_by [name: "vh_lang_languages_updated_by_index"]
}
}

Table "vh_lang_strings" {
  "id" bigint [pk, increment]
  "vh_lang_language_id" bigint
  "vh_lang_category_id" bigint
  "name" varchar(150)
  "slug" varchar(150)
  "content" mediumtext
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_lang_strings_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_lang_strings_created_by_index"]
  deleted_by [name: "vh_lang_strings_deleted_by_index"]
  slug [name: "vh_lang_strings_slug_index"]
  updated_by [name: "vh_lang_strings_updated_by_index"]
  vh_lang_category_id [name: "vh_lang_strings_vh_lang_category_id_index"]
  vh_lang_language_id [name: "vh_lang_strings_vh_lang_language_id_index"]
}
}

Table "vh_medias" {
  "id" bigint [pk, increment]
  "name" varchar(150)
  "slug" varchar(150)
  "uuid" char(36)
  "original_name" varchar(255)
  "mime_type" varchar(255)
  "extension" varchar(255)
  "path" varchar(255)
  "url" varchar(255)
  "url_thumbnail" varchar(255)
  "size" int
  "title" varchar(200)
  "caption" varchar(255)
  "alt_text" varchar(255)
  "is_hidden" tinyint(1)
  "is_downloadable" tinyint(1)
  "download_url" varchar(255)
  "download_requires_login" tinyint(1)
  "meta" longtext
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp
  "constraint" meta

Indexes {
  caption [name: "vh_medias_caption_index"]
  (created_at, updated_at, deleted_at) [name: "vh_medias_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_medias_created_by_index"]
  deleted_by [name: "vh_medias_deleted_by_index"]
  download_requires_login [name: "vh_medias_download_requires_login_index"]
  is_downloadable [name: "vh_medias_is_downloadable_index"]
  name [name: "vh_medias_name_index"]
  original_name [name: "vh_medias_original_name_index"]
  slug [name: "vh_medias_slug_index"]
  title [name: "vh_medias_title_index"]
  updated_by [name: "vh_medias_updated_by_index"]
  uuid [name: "vh_medias_uuid_index"]
}
}

Table "vh_mediable" {
  "id" bigint [pk, increment]
  "vh_media_id" bigint
  "mediable_id" int
  "mediable_type" varchar(255)
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_mediable_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_mediable_created_by_index"]
  deleted_by [name: "vh_mediable_deleted_by_index"]
  mediable_id [name: "vh_mediable_mediable_id_index"]
  mediable_type [name: "vh_mediable_mediable_type_index"]
  updated_by [name: "vh_mediable_updated_by_index"]
  vh_media_id [name: "vh_mediable_vh_media_id_index"]
}
}

Table "vh_modules" {
  "id" bigint [pk, increment]
  "name" varchar(150)
  "title" varchar(200)
  "slug" varchar(150)
  "thumbnail" varchar(255)
  "excerpt" varchar(255)
  "description" varchar(255)
  "download_link" varchar(255)
  "author_name" varchar(255)
  "author_website" varchar(255)
  "vaah_url" varchar(255)
  "version" varchar(255)
  "version_number" int
  "db_table_prefix" varchar(255)
  "is_migratable" tinyint(1)
  "is_sample_data_available" tinyint(1)
  "is_update_available" tinyint(1)
  "is_assets_published" tinyint(1)
  "update_checked_at" datetime
  "is_active" tinyint(1)
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_modules_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_modules_created_by_index"]
  deleted_by [name: "vh_modules_deleted_by_index"]
  is_active [name: "vh_modules_is_active_index"]
  name [name: "vh_modules_name_index"]
  slug [name: "vh_modules_slug_index"]
  title [name: "vh_modules_title_index"]
  updated_by [name: "vh_modules_updated_by_index"]
}
}

Table "vh_notifications" {
  "id" bigint [pk, increment]
  "uuid" char(36)
  "name" varchar(150)
  "slug" varchar(150)
  "details" varchar(255)
  "via_mail" tinyint(1)
  "via_sms" tinyint(1)
  "via_push" tinyint(1)
  "via_frontend" tinyint(1)
  "via_backend" tinyint(1)
  "is_error" tinyint(1)
  "can_update_via" tinyint(1)
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_notifications_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_notifications_created_by_index"]
  deleted_by [name: "vh_notifications_deleted_by_index"]
  name [name: "vh_notifications_name_index"]
  slug [name: "vh_notifications_slug_index"]
  updated_by [name: "vh_notifications_updated_by_index"]
  via_backend [name: "vh_notifications_via_backend_index"]
  via_frontend [name: "vh_notifications_via_frontend_index"]
  via_mail [name: "vh_notifications_via_mail_index"]
  via_push [name: "vh_notifications_via_push_index"]
  via_sms [name: "vh_notifications_via_sms_index"]
}
}

Table "vh_notification_contents" {
  "id" bigint [pk, increment]
  "vh_notification_id" bigint
  "via" varchar(255)
  "sort" int
  "key" varchar(255)
  "value" text
  "meta" longtext
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp
  "constraint" meta

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_notification_contents_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_notification_contents_created_by_index"]
  deleted_by [name: "vh_notification_contents_deleted_by_index"]
  key [name: "vh_notification_contents_key_index"]
  updated_by [name: "vh_notification_contents_updated_by_index"]
  vh_notification_id [name: "vh_notification_contents_vh_notification_id_index"]
  via [name: "vh_notification_contents_via_index"]
}
}

Table "vh_notified" {
  "id" bigint [pk, increment]
  "vh_notification_id" bigint
  "vh_user_id" bigint
  "via" varchar(255)
  "last_attempt_at" datetime
  "sent_at" datetime
  "read_at" datetime
  "marked_delivered" datetime
  "meta" longtext
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp
  "constraint" meta

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_notified_created_at_updated_at_deleted_at_index"]
  marked_delivered [name: "vh_notified_marked_delivered_index"]
  read_at [name: "vh_notified_read_at_index"]
  sent_at [name: "vh_notified_sent_at_index"]
  vh_notification_id [name: "vh_notified_vh_notification_id_index"]
  vh_user_id [name: "vh_notified_vh_user_id_index"]
  via [name: "vh_notified_via_index"]
}
}

Table "vh_permissions" {
  "id" bigint [pk, increment]
  "uuid" char(36)
  "name" varchar(150)
  "slug" varchar(150)
  "module" varchar(255)
  "section" varchar(255)
  "details" varchar(255)
  "count_users" int
  "count_roles" int
  "is_active" tinyint(1)
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_permissions_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_permissions_created_by_index"]
  deleted_by [name: "vh_permissions_deleted_by_index"]
  is_active [name: "vh_permissions_is_active_index"]
  slug [name: "vh_permissions_slug_index"]
  updated_by [name: "vh_permissions_updated_by_index"]
}
}

Table "vh_roles" {
  "id" bigint [pk, increment]
  "uuid" char(36)
  "name" varchar(150)
  "slug" varchar(150)
  "details" varchar(255)
  "count_users" int
  "count_permissions" int
  "is_active" tinyint(1)
  "belong_type" varchar(255)
  "belong_id" bigint
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (belong_type, belong_id) [name: "vh_roles_belong_type_belong_id_index"]
  (created_at, updated_at, deleted_at) [name: "vh_roles_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_roles_created_by_index"]
  deleted_by [name: "vh_roles_deleted_by_index"]
  slug [name: "vh_roles_slug_index"]
  updated_by [name: "vh_roles_updated_by_index"]
}
}

Table "vh_role_permissions" {
  "id" bigint [pk, increment]
  "vh_role_id" bigint
  "vh_permission_id" bigint
  "is_active" tinyint(1)
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_role_permissions_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_role_permissions_created_by_index"]
  deleted_by [name: "vh_role_permissions_deleted_by_index"]
  is_active [name: "vh_role_permissions_is_active_index"]
  updated_by [name: "vh_role_permissions_updated_by_index"]
  vh_permission_id [name: "vh_role_permissions_vh_permission_id_index"]
  vh_role_id [name: "vh_role_permissions_vh_role_id_index"]
}
}

Table "vh_themes" {
  "id" bigint [pk, increment]
  "name" varchar(150)
  "title" varchar(200)
  "slug" varchar(150)
  "thumbnail" varchar(255)
  "excerpt" varchar(255)
  "description" varchar(255)
  "download_link" varchar(255)
  "author_name" varchar(255)
  "author_website" varchar(255)
  "vaah_url" varchar(255)
  "version" varchar(255)
  "version_number" int
  "db_table_prefix" varchar(255)
  "is_migratable" tinyint(1)
  "is_default" tinyint(1)
  "is_sample_data_available" tinyint(1)
  "is_update_available" tinyint(1)
  "is_assets_published" tinyint(1)
  "update_checked_at" datetime
  "is_active" tinyint(1)
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_themes_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_themes_created_by_index"]
  deleted_by [name: "vh_themes_deleted_by_index"]
  is_active [name: "vh_themes_is_active_index"]
  is_default [name: "vh_themes_is_default_index"]
  slug [name: "vh_themes_slug_index"]
  updated_by [name: "vh_themes_updated_by_index"]
}
}

Table "vh_user_authorizations" {
  "id" bigint [pk, increment]
  "vh_user_id" bigint
  "name" varchar(150)
  "slug" varchar(150)
  "authorization_id" varchar(255)
  "last_authorization_at" datetime
  "meta" text
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_user_authorizations_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_user_authorizations_created_by_index"]
  deleted_by [name: "vh_user_authorizations_deleted_by_index"]
  updated_by [name: "vh_user_authorizations_updated_by_index"]
}
}

Table "vh_user_roles" {
  "id" bigint [pk, increment]
  "vh_user_id" bigint
  "vh_role_id" bigint
  "is_active" tinyint(1)
  "created_by" bigint
  "updated_by" bigint
  "deleted_by" bigint
  "created_at" timestamp
  "updated_at" timestamp
  "deleted_at" timestamp

Indexes {
  (created_at, updated_at, deleted_at) [name: "vh_user_roles_created_at_updated_at_deleted_at_index"]
  created_by [name: "vh_user_roles_created_by_index"]
  deleted_by [name: "vh_user_roles_deleted_by_index"]
  is_active [name: "vh_user_roles_is_active_index"]
  updated_by [name: "vh_user_roles_updated_by_index"]
  vh_role_id [name: "vh_user_roles_vh_role_id_index"]
  vh_user_id [name: "vh_user_roles_vh_user_id_index"]
}
}

Ref:"vh_registrations"."id" < "vh_users"."registration_id"

Ref:"vh_users"."id" < "vh_users"."created_by"

Ref:"vh_users"."id" < "vh_users"."updated_by"

Ref:"vh_users"."id" < "vh_users"."deleted_by"

Ref:"vh_users"."id" < "vh_lang_categories"."created_by"

Ref:"vh_users"."id" < "vh_lang_categories"."updated_by"

Ref:"vh_users"."id" < "vh_lang_categories"."deleted_by"

Ref:"vh_users"."id" < "vh_lang_languages"."created_by"

Ref:"vh_users"."id" < "vh_lang_languages"."updated_by"

Ref:"vh_users"."id" < "vh_lang_languages"."deleted_by"

Ref:"vh_lang_languages"."id" < "vh_lang_strings"."vh_lang_language_id"

Ref:"vh_lang_categories"."id" < "vh_lang_strings"."vh_lang_category_id"

Ref:"vh_users"."id" < "vh_lang_strings"."created_by"

Ref:"vh_users"."id" < "vh_lang_strings"."updated_by"

Ref:"vh_users"."id" < "vh_lang_strings"."deleted_by"

Ref:"vh_users"."id" < "vh_medias"."created_by"

Ref:"vh_users"."id" < "vh_medias"."updated_by"

Ref:"vh_users"."id" < "vh_medias"."deleted_by"

Ref:"vh_medias"."id" < "vh_mediable"."vh_media_id"

Ref:"vh_users"."id" < "vh_mediable"."created_by"

Ref:"vh_users"."id" < "vh_mediable"."updated_by"

Ref:"vh_users"."id" < "vh_mediable"."deleted_by"

Ref:"vh_users"."id" < "vh_modules"."created_by"

Ref:"vh_users"."id" < "vh_modules"."updated_by"

Ref:"vh_users"."id" < "vh_modules"."deleted_by"

Ref:"vh_users"."id" < "vh_notifications"."created_by"

Ref:"vh_users"."id" < "vh_notifications"."updated_by"

Ref:"vh_users"."id" < "vh_notifications"."deleted_by"

Ref:"vh_notifications"."id" < "vh_notification_contents"."vh_notification_id"

Ref:"vh_users"."id" < "vh_notification_contents"."created_by"

Ref:"vh_users"."id" < "vh_notification_contents"."updated_by"

Ref:"vh_users"."id" < "vh_notification_contents"."deleted_by"

Ref:"vh_notifications"."id" < "vh_notified"."vh_notification_id"

Ref:"vh_users"."id" < "vh_notified"."vh_user_id"

Ref:"vh_users"."id" < "vh_permissions"."created_by"

Ref:"vh_users"."id" < "vh_permissions"."updated_by"

Ref:"vh_users"."id" < "vh_permissions"."deleted_by"

Ref:"vh_users"."id" < "vh_registrations"."created_by"

Ref:"vh_users"."id" < "vh_registrations"."deleted_by"

Ref:"vh_users"."id" < "vh_registrations"."invited_by"

Ref:"vh_users"."id" < "vh_registrations"."updated_by"

Ref:"vh_users"."id" < "vh_registrations"."vh_user_id"

Ref:"vh_users"."id" < "vh_roles"."created_by"

Ref:"vh_users"."id" < "vh_roles"."updated_by"

Ref:"vh_users"."id" < "vh_roles"."deleted_by"

Ref:"vh_roles"."id" < "vh_role_permissions"."vh_role_id"

Ref:"vh_permissions"."id" < "vh_role_permissions"."vh_permission_id"

Ref:"vh_users"."id" < "vh_role_permissions"."created_by"

Ref:"vh_users"."id" < "vh_role_permissions"."updated_by"

Ref:"vh_users"."id" < "vh_role_permissions"."deleted_by"

Ref:"vh_users"."id" < "vh_themes"."created_by"

Ref:"vh_users"."id" < "vh_themes"."updated_by"

Ref:"vh_users"."id" < "vh_themes"."deleted_by"

Ref:"vh_users"."id" < "vh_user_authorizations"."vh_user_id"

Ref:"vh_users"."id" < "vh_user_authorizations"."created_by"

Ref:"vh_users"."id" < "vh_user_authorizations"."updated_by"

Ref:"vh_users"."id" < "vh_user_authorizations"."deleted_by"

Ref:"vh_users"."id" < "vh_user_roles"."vh_user_id"

Ref:"vh_roles"."id" < "vh_user_roles"."vh_role_id"

Ref:"vh_users"."id" < "vh_user_roles"."created_by"

Ref:"vh_users"."id" < "vh_user_roles"."updated_by"

Ref:"vh_users"."id" < "vh_user_roles"."deleted_by"


/////////// !!!!!EOF


// Use DBML to define database structure using dbdiagram.io
// Docs: https://dbml.dbdiagram.io/docs
// Also published at https://dbdocs.io/mattebb8854a48/OpenNetAdmin

Project OpenNetAdmin {
  database_type: 'MySQL'
  Note: 'Primary table structure for the OpenNetAdmin IPAM database. Please note that much of the data integrity and consistency is in the code not at the database level.'
}

Table "auth_groups" {
  "id" int [pk, not null, increment]
  "name" varchar(32) [not null]
  "description" varchar(191) [not null]
  "level" int [not null, default: "0"]

Indexes {
  name [unique, name: "name"]
}
}

Table "blocks" {
  "id" int [pk, not null]
  "ip_addr_start" decimal(39,0) [not null]
  "ip_addr_end" decimal(39,0) [not null]
  "name" varchar(63) [not null]
  "notes" varchar(191) [not null]
}

Table "configuration_types" {
  "id" int [pk, not null]
  "name" varchar(63) [not null]
}

Table "configurations" {
  "id" int [pk, not null]
  "configuration_type_id" int [not null]
  "host_id" int [not null]
  "md5_checksum" varchar(63) [not null]
  "config_body" longtext [not null]
  "ctime" timestamp [not null]

Indexes {
  host_id [name: "host_id"]
}
}

Table "custom_attribute_types" {
  "id" int [pk, not null]
  "name" varchar(63) [not null]
  "notes" varchar(127) [not null]
  "field_validation_rule" text [not null]
  "failed_rule_text" text [not null]
}

Table "custom_attributes" {
  "id" int [pk, not null, increment]
  "custom_attribute_type_id" int [not null]
  "table_name_ref" varchar(40) [not null]
  "table_id_ref" int [not null, default: "0"]
  "value" text [not null]
    Note: 'This table uses the table_name_ref field to identify the table and the table_id_ref field to identify the foreign key id. It would point to either a host or a subnet'
}

Table "dcm_module_list" {
  "name" varchar(128) [pk, not null]
  "description" varchar(191) [not null]
  "file" varchar(128) [not null]

Indexes {
  name [unique, name: "name"]
}
}

Table "device_types" {
  "id" int [pk, not null]
  "model_id" int [not null]
  "role_id" int [not null]
}

Table "devices" {
  "id" int [pk, not null]
  "location_id" int [not null]
  "device_type_id" int [not null]
  "primary_host_id" int [not null]
  "asset_tag" varchar(191) [default: NULL]
  "serial_number" varchar(191) [default: NULL]
}

Table "dhcp_failover_groups" {
  "id" int [pk, not null]
  "primary_server_id" int [not null]
  "secondary_server_id" int [not null]
  "max_response_delay" int [not null]
  "max_unacked_updates" int [not null]
  "max_load_balance" int [not null]
  "primary_port" int [not null]
  "peer_port" int [not null]
  "mclt" int [not null]
  "split" int [not null]
}

Table "dhcp_option_entries" {
  "id" int [pk, not null]
  "dhcp_option_id" int [not null]
  "subnet_id" int [not null, note: 'Define DHCP option at the Subnet level']
  "host_id" int [not null, note: 'Define DHCP option at the Host level']
  "server_id" int [not null, note: 'Define DHCP option at the DHCP Server level']
  "value" varchar(127) [not null]
  Note: 'DHCP Options. Must only populate one of subnet,host, or server ID fields for a given row, If none are populated then it is a Global default.'
}

Table "dhcp_options" {
  "id" int [pk, not null]
  "name" varchar(31) [not null]
  "number" int [not null]
  "type" varchar(1) [not null]
  "display_name" varchar(31) [not null]
  "sys_default" int [not null]
}

Table "dhcp_pools" {
  "id" int [pk, not null]
  "subnet_id" int [not null]
  "dhcp_failover_group_id" int [not null]
  "ip_addr_start" int [not null]
  "ip_addr_end" int [not null]
  "lease_length" int [not null]
  "lease_grace_period" int [not null]
  "lease_renewal_time" int [not null]
  "lease_rebind_time" int [not null]
  "allow_bootp_clients" int [not null]
}

Table "dhcp_server_subnets" {
  "id" int [pk, not null]
  "host_id" int [not null]
  "subnet_id" int [not null]
}

Table "dns" {
  "id" int [pk, not null]
  "dns_id" int [not null, default: "0"]
  "domain_id" int [not null]
  "interface_id" int [not null]
  "type" varchar(15) [not null]
  "ttl" int [not null]
  "name" varchar(191) [not null]
  "ebegin" timestamp [not null]
  "notes" varchar(128) [not null]
  "mx_preference" int [not null]
  "txt" varchar(191) [not null]
  "srv_pri" int [not null]
  "srv_weight" int [not null]
  "srv_port" int [not null]
  "dns_view_id" int [not null]

Indexes {
  domain_id [name: "domain_id"]
}
}

Table "dns_server_domains" {
  "id" int [pk, not null]
  "host_id" int [not null]
  "domain_id" int [not null]
  "role" varchar(10) [not null]
  "rebuild_flag" int [not null]
}

Table "dns_views" {
  "id" int [pk, not null]
  "name" varchar(191) [not null]
  "description" varchar(191) [not null]
}

Table "domains" {
  "id" int [pk, not null]
  "parent_id" int [not null]
  "ctime" timestamp [not null]
  "serial" int [not null]
  "refresh" int [not null]
  "retry" int [not null]
  "expiry" int [not null]
  "minimum" int [not null]
  "default_ttl" int [not null]
  "primary_master" varchar(191) [not null]
  "admin_email" varchar(191) [not null]
  "name" varchar(191) [not null]
}

Table "group_assignments" {
  "id" int [pk, not null, increment]
  "user_id" int [not null, default: "0"]
  "group_id" int [not null, default: "0"]
}

Table "hosts" {
  "id" int [pk, not null]
  "parent_id" int [not null]
  "primary_dns_id" int [not null]
  "device_id" int [not null]
  "notes" varchar(191) [not null]
}

Table "interface_clusters" {
  "host_id" int [not null]
  "interface_id" int [not null]
  "name" varchar(191) [not null]

Indexes {
  (interface_id, host_id) [pk]
}
}

Table "interfaces" {
  "id" int [pk, not null]
  "nat_interface_id" int [not null, default: "0"]
  "host_id" int [not null]
  "subnet_id" int [not null]
  "ip_addr" decimal(39,0) [not null]
  "mac_addr" varchar(12) [not null]
  "name" varchar(191) [not null]
  "description" varchar(191) [default: NULL]
  "last_response" datetime [default: NULL]
}

Table "locations" {
  "id" int [pk, not null]
  "reference" varchar(10) [not null]
  "name" varchar(63) [not null]
  "address" varchar(63) [not null]
  "city" varchar(63) [not null]
  "state" varchar(31) [not null]
  "zip_code" int [not null]
  "latitude" varchar(20) [not null]
  "longitude" varchar(20) [not null]
  "misc" varchar(191) [not null]
}

Table "manufacturers" {
  "id" int [pk, not null]
  "name" varchar(191) [not null]

Indexes {
  name [unique, name: "name"]
}
}

Table "messages" {
  "id" int [pk, not null, increment]
  "table_name_ref" varchar(40) [not null]
  "table_id_ref" int [not null, default: "0"]
  "priority" varchar(20) [not null]
  "username" varchar(40) [not null]
  "mtime" timestamp [not null]
  "expiration" datetime [default: NULL]
  "message_text" text [not null]

Indexes {
  table_name_ref [name: "table_name_ref"]
  table_id_ref [name: "table_id_ref"]
}
}

Table "models" {
  "id" int [pk, not null]
  "manufacturer_id" int [not null]
  "name" varchar(191) [not null]
  "snmp_sysobjectid" varchar(191) [not null]
}

Table "ona_logs" {
  "id" int [pk, not null, increment]
  "timestamp" timestamp [not null]
  "username" varchar(25) [not null]
  "remote_addr" varchar(50) [not null]
  "message" varchar(1023) [not null]
  "context_name" varchar(63) [not null]
}

Table "permission_assignments" {
  "id" int [pk, not null, increment]
  "perm_id" int [not null, default: "0"]
  "user_id" int [not null, default: "0"]
  "group_id" int [not null, default: "0"]
}

Table "permissions" {
  "id" int [pk, not null, increment]
  "name" varchar(32) [not null]
  "description" varchar(191) [not null]

Indexes {
  name [unique, name: "name"]
}
}

Table "rack_assignments" {
  "id" int [pk, not null]
  "rack_id" int [not null]
  "device_id" int [not null]
  "position" int [not null, note: 'Which U is this device in']
  "depth" int [not null, note: 'Is it 1,2,3,4 depth in quarters.']
  "size" int [not null, note: 'How many U this device consumes']
  "mounted_from" int [not null, note: 'Is the device in the front(1) or the back(2) of the rack']
  "alt_name" varchar(64) [not null, note: 'if there is no ONA device, put another name here']
  Note: 'Position of a device within a rack'
}

Enum "racks_numbering_enum" {
  "DESC"
  "ASC"
}

Table "racks" {
  "id" int [pk, not null]
  "name" varchar(64) [not null]
  "description" varchar(255) [not null]
  "size" int [not null, note: 'How many U are in this rack']
  "numbering" racks_numbering_enum [not null, default: "DESC", note: 'Direction of rack numbering']
  "location_id" int [not null, note: 'location of rack']
  Note: 'Stores info about physical racks'
}

Table "roles" {
  "id" int [pk, not null]
  "name" varchar(127) [not null]

Indexes {
  name [unique, name: "name"]
}
}

Table "sequences" {
  "name" varchar(31) [pk, not null]
  "seq" int [not null]
}

Table "sessions" {
  "sesskey" varchar(128) [pk, not null]
  "expiry" int [not null]
  "sessvalue" text [not null]
}

Table "subnet_types" {
  "id" int [pk, not null]
  "short_name" varchar(31) [not null]
  "display_name" varchar(63) [not null]
  "notes" varchar(191) [not null]
}

Table "subnets" {
  "id" int [pk, not null]
  "subnet_type_id" int [not null]
  "vlan_id" int [not null]
  "ip_addr" decimal(39,0) [not null]
  "ip_mask" decimal(39,0) [not null]
  "name" varchar(127) [not null]
}

Table "sys_config" {
  "name" varchar(128) [pk, not null]
  "value" varchar(191) [not null]
  "description" varchar(512) [not null]
  "field_validation_rule" text [not null]
  "editable" int [not null]
  "deleteable" int [not null]
  "failed_rule_text" text [not null]
}

Table "tags" {
  "id" int [pk, not null]
  "name" varchar(127) [not null]
  "type" varchar(25) [not null]
  "reference" int [not null]
  Note: 'This table uses the type field to identify the table and the reference field to identify the foreign key id. It would point to either a host or a subnet'
}

Table "users" {
  "id" int [pk, not null, increment]
  "username" varchar(32) [not null]
  "password" varchar(64) [not null]
  "level" int [not null, default: "0"]
  "ctime" timestamp [not null]
  "atime" datetime [default: NULL]

Indexes {
  username [unique, name: "username"]
}
}

Table "vlan_campuses" {
  "id" int [pk, not null]
  "name" varchar(63) [not null]
}

Table "vlans" {
  "id" int [pk, not null]
  "vlan_campus_id" int [not null]
  "name" varchar(63) [not null]
  "number" int [not null]
}


Ref: "configurations"."configuration_type_id" < "configuration_types"."id"

Ref: "custom_attributes"."custom_attribute_type_id" < "custom_attribute_types"."id"

Ref: "dhcp_option_entries"."dhcp_option_id" < "dhcp_options"."id"

Ref: "vlans"."vlan_campus_id" < "vlan_campuses"."id"

Ref: "rack_assignments"."rack_id" < "racks"."id"

Ref: "dns"."dns_view_id" < "dns_views"."id"

Ref: "dns_server_domains"."domain_id" < "domains"."id"

Ref: "dns"."domain_id" < "domains"."id"

Ref: "domains"."parent_id" < "domains"."id"

Ref: "dns"."interface_id" < "interfaces"."id"

Ref: "interfaces"."subnet_id" < "subnets"."id"

Ref: "subnets"."subnet_type_id" < "subnet_types"."id"

Ref: "racks"."location_id" < "locations"."id"

Ref: "hosts"."primary_dns_id" < "dns"."id"

Ref: "hosts"."parent_id" < "hosts"."id"

Ref: "hosts"."device_id" < "devices"."id"

Ref: "devices"."device_type_id" < "device_types"."id"

Ref: "devices"."location_id" < "locations"."id"

Ref: "devices"."primary_host_id" < "hosts"."id"

Ref: "device_types"."role_id" < "roles"."id"

Ref: "permission_assignments"."user_id" < "users"."id"

Ref: "permission_assignments"."perm_id" < "permissions"."id"

Ref: "group_assignments"."user_id" < "users"."id"

Ref: "permission_assignments"."group_id" < "auth_groups"."id"

Ref: "group_assignments"."group_id" < "auth_groups"."id"

Ref: "dhcp_failover_groups"."primary_server_id" < "hosts"."id"

Ref: "dhcp_failover_groups"."secondary_server_id" < "hosts"."id"

Ref: "configurations"."host_id" < "hosts"."id"

Ref: "dhcp_server_subnets"."host_id" < "hosts"."id"

Ref: "dhcp_server_subnets"."subnet_id" < "subnets"."id"

Ref: "rack_assignments"."device_id" < "devices"."id"

Ref: "dns_server_domains"."host_id" < "hosts"."id"

Ref: "interfaces"."host_id" < "hosts"."id"

Ref: "interfaces"."nat_interface_id" < "interfaces"."id"

Ref: "subnets"."vlan_id" < "vlans"."id"

Ref: "models"."manufacturer_id" < "manufacturers"."id"

Ref: "device_types"."model_id" < "models"."id"

Ref: "dhcp_pools"."subnet_id" < "subnets"."id"

Ref: "dhcp_pools"."dhcp_failover_group_id" < "dhcp_failover_groups"."id"

Ref: "interface_clusters"."host_id" < "hosts"."id"

Ref: "interface_clusters"."interface_id" < "interfaces"."id"

Ref: "dns"."dns_id" < "dns"."id"


/////////// !!!!!EOF


table users {
  id uuid [pk]
  username varchar [null, unique]
  email varchar
  totp_secret varchar [null]
  last_totp varchar [null]
  totp_backup json [null]
  password_hash varchar [null]
  email_confirmation_token varchar [null, unique]
  email_confirmed_at timestamp [null]
  unconfirmed_email varchar [null]
  invitation_token varchar [null, unique]
  invitation_accepted_at timestamp [null]
  invited_by_id uuid [null, ref: > users.id]
  superuser boolean [default: false]
  authentication_token varchar
  braintree_id varchar [null]
  inserted_at timestamp
  updated_at timestamp
}

table user_identities {
  id uuid [pk]
  provider varchar
  uid varchar
  user uuid [null, ref: > users.id]
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (provider, uid) [unique]
  }
}

table teams {
  id uuid [pk]
  name varchar
  slug varchar [unique]
  braintree_id varchar [null]
  inserted_at timestamp
  updated_at timestamp
}

table roles {
  id uuid [pk]
  name varchar [unique]
  permissions json
  inserted_at timestamp
  updated_at timestamp
}

table team_memberships {
  id uuid [pk]
  team_id uuid [ref: > teams.id]
  user_id uuid [ref: > users.id]
  role_id uuid [ref: > roles.id]
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (team_id, user_id) [unique]
  }
}

table hosting_adapters {
  id uuid [pk]
  user_id uuid [ref: > users.id]
  global boolean [default: false]
  endpoint varchar [null]
  unlink_code varchar [null]
  api varchar [null]
  name varchar [null]
  server_nick_name varchar [null]
  default_region varchar [null]
  default_size varchar [null]
  can_reboot boolean [null]
  can_rename boolean [null]
  internal_iface varchar [null]
  external_iface varchar [null]
  ssh_user varchar [null]
  ssh_auth_method varchar [null]
  ssh_key_method varchar [null]
  bootstrap_script varchar [null]
  instructions text [null]
  inserted_at timestamp
  updated_at timestamp
}

table team_adapters {
  id uuid [pk]
  team_id uuid [ref: > teams.id]
  hosting_adapter_id uuid [ref: > hosting_adapters.id]
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (team_id, hosting_adapter_id) [unique]
  }
}

table hosting_credential_fields {
  id uuid [pk]
  hosting_adapter_id uuid [ref: > hosting_adapters.id]
  key varchar
  label varchar
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (hosting_adapter_id, key) [unique]
  }
}

table hosting_regions {
  id uuid [pk]
  hosting_adapter_id uuid [ref: > hosting_adapters.id]
  region varchar
  name varchar
  active boolean [default: true]
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (hosting_adapter_id, region) [unique]
  }
}

table hosting_plans {
  id uuid [pk]
  hosting_region_id uuid [ref: > hosting_regions.id]
  plan varchar
  name varchar
  active boolean [default: true]
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (hosting_region_id, plan) [unique]
  }
}

table hosting_specs {
  id uuid [pk]
  hosting_plan_id uuid [ref: > hosting_plans.id]
  spec varchar
  ram integer
  cpu integer
  disk integer
  transfer integer
  dollars_per_hr decimal
  dollars_per_mo decimal
  active boolean [default: true]
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (hosting_plan_id, spec) [unique]
  }
}

table hosting_accounts {
  id uuid [pk]
  user_id uuid [null, ref: > users.id]
  team_id uuid [null, ref: > teams.id]
  hosting_adapter_id uuid [ref: > hosting_adapters.id]
  name varchar
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (user_id, name) [unique]
    (team_id, name) [unique]
  }
}

table hosting_account_credentials {
  id uuid [pk]
  hosting_account_id uuid [ref: > hosting_accounts.id]
  hosting_credential_field_id uud [ref: > hosting_credential_fields.id]
  value varchar
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (hosting_account_id, hosting_credential_field_id) [unique]
  }
}

table apps {
  id uuid [pk]
  user_id uuid [null, ref: > users.id]
  team_id uuid [null, ref: > teams.id]
  name varchar
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (user_id, name) [unique]
    (team_id, name) [unique]
  }
}

table instances {
  id uuid [pk]
  app_id uuid [ref: > apps.id]
  name varchar [default: 'default']
  timezone varchar
  state varchar
  auto_reconfigure boolean [default: false]
  keep_deploys integer [default: 2]
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (app_id, name) [unique]
  }
}

table instance_access {
  id uuid [pk]
  instance_id uuid [ref: > instances.id]
  user_id uuid [ref: > users.id]
  role_id uuid [ref: > roles.id]
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (instance_id, user_id) [unique]
  }
}

table servers {
  id uuid [pk]
  instance_id uuid [ref: > instances.id]
  hosting_account_id uuid [ref: > hosting_accounts.id]
  specs_id uuid [ref: > hosting_specs.id]
  server varchar
  status varchar
  name varchar
  external_ip varchar
  internal_ip varchar
  token varchar
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (instance_id, server) [unique]
  }
}

table services {
  id uuid [pk]
  instance_id uuid [ref: > instances.id]
  uid varchar
  name varchar
  slug varchar
  url varchar
  token varchar
  mode varchar
  ip varchar
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (instance_id, uid) [unique]
  }
}

table components {
  id uuid [pk]
  instance_id uuid [null, ref: > instances.id]
  service_id uuid [null, ref: > services.id]
  name varchar
  category varchar
  uid varchar
  current_generation integer
  deploy_strategy varchar [default: 'inline']
  repair_strategy varchar [default: 'inline']
  behaviors json
  port integer
  horizontal boolean
  redundant boolean
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (instance_id, name) [unique]
    (service_id, name) [unique]
  }
}

table component_generations {
  id uuid [pk]
  component_id uuid [null, ref: > components.id]
  image varchar
  counter integer
  state varchar
  pulse varchar
  network varchar
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (component_id, counter) [unique]
  }
}

table component_servers {
  id uuid [pk]
  generation_id uuid [ref: > component_generations.id]
  server_id uuid [ref: > servers.id]
  instance_counter integer [default: 1]
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (generation_id, server_id) [unique]
  }
}

table deploys {
  id uuid [pk]
  instance_id uuid [ref: > instances.id]
  user_id uuid [ref: > users.id]
  commit_message text
  boxfile_content text
  build_id varchar
  log longtext
  success boolean [default: true]
  available boolean [default: true]
  inserted_at timestamp
  updated_at timestamp
}

table scales {
  id uuid [pk]
  instance_id uuid [ref: > instances.id]
  user_id uuid [ref: > users.id]
  log longtext
  type varchar [note: "vertical, horizontal, or migration"]
  success boolean [default: true]
  inserted_at timestamp
  updated_at timestamp
}

table evars {
  id uuid [pk]
  instance_id uuid [ref: > instances.id]
  title varchar
  value varchar
  internal boolean [default: false]
  component_id uuid [null, ref: > components.id]
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (instance_id, title) [unique]
  }
}

table keys {
  id uuid [pk]
  instance_id uuid [ref: > instances.id]
  hosting_id varchar
  title varchar
  public varchar
  private text
  inserted_at timestamp
  updated_at timestamp
}

table certs {
  id uuid [pk]
  instance_id uuid [ref: > instances.id]
  domain varchar
  email varchar
  organization varchar
  department varchar
  city varchar
  state varchar
  country varchar
  inserted_at timestamp
  updated_at timestamp
}

table cert_bundles {
  id uuid [pk]
  cert_id uuid [ref: > certs.id]
  type varchar
  key text [null]
  challenge json [null]
  csr text [null]
  authority text [null]
  cert text [null]
  active boolean [default: false]
  inserted_at timestamp
  updated_at timestamp
}

table backup_configs {
  id uuid [pk]
  component_id uuid [ref: > components.id]
  schedule varchar
  warehouse boolean [default: true]
  minio boolean [default: false]
  s3 boolean [default: false]
  digitalocean boolean [default: false]
  googlecloud boolean [default: false]
  glacier boolean [default: false]
  keep integer [default: 2]
  inserted_at timestamp
  updated_at timestamp
}

table log_drains {
  id uuid [pk]
  instance_id uuid [ref: > instances.id]
  type varchar
  endpoint varchar
  identifier varchar
  key varchar [null]
  secret varchar [null]
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (instance_id, type) [unique]
  }
}

table alert_settings {
  id uuid [pk]
  instance_id uuid [ref: > instances.id]
  tags json
  metric varchar
  threshold varchar
  duration varchar
  level varchar
  endpoint varchar
  inserted_at timestamp
  updated_at timestamp
}

table plans {
  type varchar
  level varchar
  period varchar
  amount decimal
  inserted_at timestamp
  updated_at timestamp

  indexes {
    (type, level) [pk]
  }
}

table subscriptions {
  id uuid [pk]
  user_id uuid [ref: > users.id, null]
  team_id uuid [ref: > teams.id, null]
  plan_type varchar
  plan_level varchar
  due_on date
  inserted_at timestamp
  updated_at timestamp
}

ref: subscriptions.(plan_type, plan_level) > plans.(type, level)

table payments {
  id uuid [pk]
  subscription_id uuid [ref: > subscriptions.id]
  transaction_id varchar
  inserted_at timestamp
  updated_at timestamp
}


/////////// !!!!!EOF

